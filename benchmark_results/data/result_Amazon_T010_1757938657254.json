{
  "id": "Amazon_T010_1757938657254",
  "website": "Amazon",
  "task": {
    "id": "T010",
    "description": "Add Product to Wishlist",
    "objective": "General",
    "expectedResult": "Medium",
    "difficulty": "Open a product detail modal and click the 'Add to Wish List' button.",
    "category": ".product-card:first-child, .add-to-wishlist",
    "tags": [
      "1. Click product card to open modal 2. Click 'Add to Wish List' button"
    ],
    "notes": "Success notification appears, wishlist localStorage is updated, button state may change"
  },
  "websiteInfo": {
    "name": "Amazon",
    "htmlFiles": [
      "index.html",
      "test_website.html"
    ],
    "hasIndex": true,
    "structure": {}
  },
  "attempts": [
    {
      "attemptNumber": 1,
      "model": "deepseek-ai/DeepSeek-V3.1-thinking-on",
      "macroCode": "import path from 'path';\n\nexport default async function(page, fileUrl, screenshotsDir) {\n  try {\n    // Navigate to the HTML file\n    await page.goto(fileUrl);\n    await page.waitForLoadState('networkidle');\n\n    // Take initial screenshot\n    const screenshots = [];\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_1_initial.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_1_initial.png'));\n\n    // Wait for and click the first product card\n    await page.waitForSelector('.product-card:first-child');\n    await page.click('.product-card:first-child');\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_2_product_clicked.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_2_product_clicked.png'));\n\n    // Wait for product modal to appear and click Add to Wishlist\n    await page.waitForSelector('.add-to-wishlist', { state: 'visible', timeout: 5000 });\n    await page.click('.add-to-wishlist');\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_3_wishlist_clicked.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_3_wishlist_clicked.png'));\n\n    // Wait for confirmation and extract product details\n    await page.waitForTimeout(1000); // Wait for any animation/confirmation\n    const productDetails = await page.evaluate(() => {\n      const title = document.querySelector('.product-title')?.textContent?.trim();\n      const price = document.querySelector('.product-price')?.textContent?.trim();\n      return { title, price };\n    });\n\n    return {\n      success: true,\n      action: \"Successfully added first product to wishlist\",\n      extractedData: productDetails,\n      screenshots,\n      error: null\n    };\n  } catch (error) {\n    return {\n      success: false,\n      action: \"Failed to add product to wishlist\",\n      extractedData: {},\n      screenshots,\n      error: error.message\n    };\n  }\n}",
      "executionResult": null,
      "success": false,
      "error": "isServerMode is not defined",
      "executionTime": 101663,
      "timestamp": "2025-09-15T12:17:37.254Z"
    },
    {
      "attemptNumber": 2,
      "model": "deepseek-ai/DeepSeek-V3.1-thinking-on",
      "macroCode": "import path from 'path';\n\nexport default async function(page, fileUrl, screenshotsDir) {\n  try {\n    // Navigate to the HTML file\n    await page.goto(fileUrl);\n    await page.waitForLoadState('networkidle');\n\n    // Take initial screenshot\n    const screenshots = [];\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_1_initial.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_1_initial.png'));\n\n    // Wait for product cards to load\n    await page.waitForSelector('.product-card', { timeout: 5000 });\n    \n    // Click on the first product card\n    await page.click('.product-card:first-child');\n    \n    // Wait for product modal to appear\n    await page.waitForSelector('.product-detail-modal', { timeout: 3000 });\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_2_modal_opened.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_2_modal_opened.png'));\n\n    // Click the Add to Wishlist button\n    await page.click('.add-to-wishlist');\n    \n    // Wait for confirmation\n    await page.waitForSelector('.wishlist-confirmation', { timeout: 2000 });\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_3_wishlist_added.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_3_wishlist_added.png'));\n\n    // Extract product information\n    const productInfo = await page.evaluate(() => {\n      const productCard = document.querySelector('.product-card:first-child');\n      return {\n        title: productCard.querySelector('.product-title')?.innerText,\n        price: productCard.querySelector('.product-price')?.innerText,\n        addedToWishlist: !!document.querySelector('.wishlist-confirmation')\n      };\n    });\n\n    return {\n      success: true,\n      action: \"Successfully opened product modal and added item to wishlist\",\n      extractedData: productInfo,\n      screenshots,\n      error: null\n    };\n  } catch (error) {\n    return {\n      success: false,\n      action: \"Failed to complete task\",\n      extractedData: {},\n      screenshots: [],\n      error: error.message\n    };\n  }\n}",
      "executionResult": null,
      "success": false,
      "error": "isServerMode is not defined",
      "executionTime": 94747,
      "timestamp": "2025-09-15T12:19:18.917Z"
    },
    {
      "attemptNumber": 3,
      "model": "deepseek-ai/DeepSeek-V3.1-thinking-on",
      "macroCode": "import path from 'path';\n\nexport default async function(page, fileUrl, screenshotsDir) {\n  try {\n    // Navigate to the HTML file\n    await page.goto(fileUrl);\n    await page.waitForLoadState('networkidle');\n\n    // Take initial screenshot\n    const screenshots = [];\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_1_initial.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_1_initial.png'));\n\n    // Wait for and click the first product card\n    const firstProduct = await page.waitForSelector('.product-card:first-child');\n    await firstProduct.click();\n    \n    // Wait for product modal to appear\n    await page.waitForSelector('.product-modal', { state: 'visible' });\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_2_modal_opened.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_2_modal_opened.png'));\n\n    // Click the Add to Wishlist button using multiple selector strategies\n    const addToWishlistButton = await page.waitForSelector('.add-to-wishlist, [class*=\"wishlist\"], button:has-text(\"Add to Wish List\")');\n    await addToWishlistButton.click();\n    \n    // Wait for confirmation and take final screenshot\n    await page.waitForTimeout(1000); // Wait for any animations\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_3_wishlist_added.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_3_wishlist_added.png'));\n\n    // Extract confirmation data\n    const confirmationText = await page.textContent('.wishlist-confirmation, .success-message, [class*=\"success\"]');\n    const productTitle = await page.textContent('.product-title, h1, [class*=\"title\"]');\n\n    return {\n      success: true,\n      action: \"Successfully opened product modal and added item to wishlist\",\n      extractedData: {\n        productTitle: productTitle?.trim(),\n        confirmationMessage: confirmationText?.trim()\n      },\n      screenshots,\n      error: null\n    };\n  } catch (error) {\n    // Take screenshot on error\n    await page.screenshot({ path: path.join(screenshotsDir, 'error.png') });\n    \n    return {\n      success: false,\n      action: \"Failed to complete task\",\n      extractedData: {},\n      screenshots: [path.join(screenshotsDir, 'error.png')],\n      error: error.message\n    };\n  }\n}",
      "executionResult": null,
      "success": false,
      "error": "isServerMode is not defined",
      "executionTime": 114283,
      "timestamp": "2025-09-15T12:20:53.664Z"
    }
  ],
  "success": false,
  "finalResult": null,
  "totalExecutionTime": 310693,
  "timestamp": "2025-09-15T12:17:37.254Z",
  "savedAt": "2025-09-15T12:22:47.947Z",
  "version": "1.0"
}