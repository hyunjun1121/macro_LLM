{
  "id": "Amazon_T010_1757938584811",
  "website": "Amazon",
  "task": {
    "id": "T010",
    "description": "Add Product to Wishlist",
    "objective": "General",
    "expectedResult": "Medium",
    "difficulty": "Open a product detail modal and click the 'Add to Wish List' button.",
    "category": ".product-card:first-child, .add-to-wishlist",
    "tags": [
      "1. Click product card to open modal 2. Click 'Add to Wish List' button"
    ],
    "notes": "Success notification appears, wishlist localStorage is updated, button state may change"
  },
  "websiteInfo": {
    "name": "Amazon",
    "htmlFiles": [
      "index.html",
      "test_website.html"
    ],
    "hasIndex": true,
    "structure": {}
  },
  "attempts": [
    {
      "attemptNumber": 1,
      "model": "deepseek-ai/DeepSeek-V3.1-thinking-on",
      "macroCode": "import path from 'path';\n\nexport default async function(page, fileUrl, screenshotsDir) {\n  try {\n    // Navigate to the HTML file\n    await page.goto(fileUrl);\n    await page.waitForLoadState('networkidle');\n\n    // Take initial screenshot\n    const screenshots = [];\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_1_initial.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_1_initial.png'));\n\n    // Wait for and click the first product card\n    await page.waitForSelector('.product-card:first-child');\n    await page.click('.product-card:first-child');\n    await page.waitForTimeout(1000); // Wait for modal animation\n    \n    // Take screenshot after opening product modal\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_2_product_modal.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_2_product_modal.png'));\n\n    // Wait for and click the Add to Wishlist button\n    await page.waitForSelector('.add-to-wishlist');\n    await page.click('.add-to-wishlist');\n    await page.waitForTimeout(1000); // Wait for wishlist action\n    \n    // Take screenshot after adding to wishlist\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_3_added_to_wishlist.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_3_added_to_wishlist.png'));\n\n    // Extract product information for verification\n    const productInfo = await page.evaluate(() => {\n      const productCard = document.querySelector('.product-card:first-child');\n      return {\n        title: productCard?.querySelector('.product-title')?.innerText || 'Unknown',\n        price: productCard?.querySelector('.product-price')?.innerText || 'Unknown',\n        addedToWishlist: document.querySelector('.add-to-wishlist')?.classList.contains('added') || false\n      };\n    });\n\n    return {\n      success: true,\n      action: \"Successfully opened product modal and added item to wishlist\",\n      extractedData: {\n        productTitle: productInfo.title,\n        productPrice: productInfo.price,\n        wishlistAdded: productInfo.addedToWishlist\n      },\n      screenshots,\n      error: null\n    };\n  } catch (error) {\n    return {\n      success: false,\n      action: \"Failed to complete task\",\n      extractedData: {},\n      screenshots: [],\n      error: error.message\n    };\n  }\n}",
      "executionResult": null,
      "success": false,
      "error": "isServerMode is not defined",
      "executionTime": 102473,
      "timestamp": "2025-09-15T12:16:24.811Z"
    },
    {
      "attemptNumber": 2,
      "model": "deepseek-ai/DeepSeek-V3.1-thinking-on",
      "macroCode": "import path from 'path';\n\nexport default async function(page, fileUrl, screenshotsDir) {\n  try {\n    // Navigate to the HTML file\n    await page.goto(fileUrl);\n    await page.waitForLoadState('networkidle');\n\n    // Take initial screenshot\n    const screenshots = [];\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_1_initial.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_1_initial.png'));\n\n    // Wait for and click the first product card\n    await page.waitForSelector('.product-card:first-child', { timeout: 10000 });\n    await page.click('.product-card:first-child');\n    await page.waitForTimeout(1000); // Allow modal animation\n\n    // Take screenshot after opening product modal\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_2_modal_open.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_2_modal_open.png'));\n\n    // Wait for and click the Add to Wishlist button\n    await page.waitForSelector('.add-to-wishlist', { timeout: 10000 });\n    await page.click('.add-to-wishlist');\n    await page.waitForTimeout(1000); // Allow wishlist action to complete\n\n    // Take screenshot after adding to wishlist\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_3_wishlist_added.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_3_wishlist_added.png'));\n\n    // Extract product information for verification\n    const productInfo = await page.evaluate(() => {\n      const productCard = document.querySelector('.product-card:first-child');\n      return {\n        title: productCard?.querySelector('.product-title')?.textContent?.trim() || 'Unknown',\n        price: productCard?.querySelector('.product-price')?.textContent?.trim() || 'Unknown',\n        addedToWishlist: !!document.querySelector('.add-to-wishlist.added') // Check if button state changed\n      };\n    });\n\n    return {\n      success: true,\n      action: \"Successfully opened product modal and added item to wishlist\",\n      extractedData: productInfo,\n      screenshots,\n      error: null\n    };\n  } catch (error) {\n    return {\n      success: false,\n      action: \"Failed to complete task\",\n      extractedData: {},\n      screenshots: [],\n      error: error.message\n    };\n  }\n}",
      "executionResult": null,
      "success": false,
      "error": "isServerMode is not defined",
      "executionTime": 212279,
      "timestamp": "2025-09-15T12:18:07.284Z"
    },
    {
      "attemptNumber": 3,
      "model": "deepseek-ai/DeepSeek-V3.1-thinking-on",
      "macroCode": "import path from 'path';\n\nexport default async function(page, fileUrl, screenshotsDir) {\n  try {\n    // Navigate to the HTML file\n    await page.goto(fileUrl);\n    await page.waitForLoadState('networkidle');\n\n    // Take initial screenshot\n    const screenshots = [];\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_1_initial.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_1_initial.png'));\n\n    // Wait for and click the first product card using multiple selector strategies\n    const firstProductCard = await page.waitForSelector('.product-card:first-child, [class*=\"product-card\"]', { timeout: 10000 });\n    await firstProductCard.click();\n    await page.waitForTimeout(1000);\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_2_product_clicked.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_2_product_clicked.png'));\n\n    // Wait for product modal to appear and locate the wishlist button\n    await page.waitForSelector('.add-to-wishlist, [class*=\"wishlist\"], button:has-text(\"Add to Wish List\")', { timeout: 5000 });\n    \n    // Click the wishlist button using multiple selector strategies\n    const wishlistButton = await page.$('.add-to-wishlist, [class*=\"wishlist\"], button:has-text(\"Add to Wish List\")');\n    await wishlistButton.click();\n    \n    // Wait for confirmation and take screenshot\n    await page.waitForTimeout(1500);\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_3_wishlist_added.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_3_wishlist_added.png'));\n\n    // Extract product information for verification\n    const productTitle = await page.$eval('.product-title, [class*=\"title\"]', el => el.textContent.trim());\n    const wishlistStatus = await page.$eval('.add-to-wishlist, [class*=\"wishlist\"]', el => el.textContent.trim());\n\n    return {\n      success: true,\n      action: \"Successfully opened product modal and added product to wishlist\",\n      extractedData: {\n        productTitle: productTitle,\n        wishlistStatus: wishlistStatus\n      },\n      screenshots,\n      error: null\n    };\n  } catch (error) {\n    // Capture error screenshot\n    await page.screenshot({ path: path.join(screenshotsDir, 'error.png') });\n    screenshots.push(path.join(screenshotsDir, 'error.png'));\n    \n    return {\n      success: false,\n      action: \"Failed to add product to wishlist\",\n      extractedData: {},\n      screenshots,\n      error: error.message\n    };\n  }\n}",
      "executionResult": null,
      "success": false,
      "error": "isServerMode is not defined",
      "executionTime": 120776,
      "timestamp": "2025-09-15T12:21:39.563Z"
    }
  ],
  "success": false,
  "finalResult": null,
  "totalExecutionTime": 435528,
  "timestamp": "2025-09-15T12:16:24.811Z",
  "savedAt": "2025-09-15T12:23:40.339Z",
  "version": "1.0"
}