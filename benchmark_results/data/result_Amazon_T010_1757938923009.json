{
  "id": "Amazon_T010_1757938923009",
  "website": "Amazon",
  "task": {
    "id": "T010",
    "description": "Add Product to Wishlist",
    "objective": "General",
    "expectedResult": "Medium",
    "difficulty": "Open a product detail modal and click the 'Add to Wish List' button.",
    "category": ".product-card:first-child, .add-to-wishlist",
    "tags": [
      "1. Click product card to open modal 2. Click 'Add to Wish List' button"
    ],
    "notes": "Success notification appears, wishlist localStorage is updated, button state may change"
  },
  "websiteInfo": {
    "name": "Amazon",
    "htmlFiles": [
      "index.html",
      "test_website.html"
    ],
    "hasIndex": true,
    "structure": {}
  },
  "attempts": [
    {
      "attemptNumber": 1,
      "model": "deepseek-ai/DeepSeek-V3.1-thinking-on",
      "macroCode": "import path from 'path';\n\nexport default async function(page, fileUrl, screenshotsDir) {\n  try {\n    // Navigate to the HTML file\n    await page.goto(fileUrl);\n    await page.waitForLoadState('networkidle');\n\n    // Take initial screenshot\n    const screenshots = [];\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_1_initial.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_1_initial.png'));\n\n    // Wait for and click the first product card\n    await page.waitForSelector('.product-card:first-child', { timeout: 5000 });\n    await page.click('.product-card:first-child');\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_2_product_clicked.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_2_product_clicked.png'));\n\n    // Wait for product detail modal to appear\n    await page.waitForSelector('.product-detail-modal', { timeout: 5000 });\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_3_modal_opened.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_3_modal_opened.png'));\n\n    // Click Add to Wishlist button\n    await page.waitForSelector('.add-to-wishlist', { timeout: 5000 });\n    await page.click('.add-to-wishlist');\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_4_wishlist_clicked.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_4_wishlist_clicked.png'));\n\n    // Wait for confirmation and extract success data\n    await page.waitForSelector('.wishlist-success-message, .toast-success', { timeout: 5000 });\n    const successMessage = await page.$eval('.wishlist-success-message, .toast-success', el => el.textContent.trim());\n    \n    await page.screenshot({ path: path.join(screenshotsDir, 'step_5_confirmation.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_5_confirmation.png'));\n\n    return {\n      success: true,\n      action: \"Successfully added product to wishlist\",\n      extractedData: {\n        confirmationMessage: successMessage,\n        timestamp: new Date().toISOString()\n      },\n      screenshots,\n      error: null\n    };\n  } catch (error) {\n    await page.screenshot({ path: path.join(screenshotsDir, 'error.png') });\n    screenshots.push(path.join(screenshotsDir, 'error.png'));\n    \n    return {\n      success: false,\n      action: \"Failed to add product to wishlist\",\n      extractedData: {},\n      screenshots,\n      error: error.message\n    };\n  }\n}",
      "executionResult": null,
      "success": false,
      "error": "isServerMode is not defined",
      "executionTime": 94585,
      "timestamp": "2025-09-15T12:22:03.009Z"
    },
    {
      "attemptNumber": 2,
      "model": "deepseek-ai/DeepSeek-V3.1-thinking-on",
      "macroCode": "import path from 'path';\n\nexport default async function(page, fileUrl, screenshotsDir) {\n  try {\n    // Navigate to the HTML file\n    await page.goto(fileUrl);\n    await page.waitForLoadState('networkidle');\n\n    // Take initial screenshot\n    const screenshots = [];\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_1_initial.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_1_initial.png'));\n\n    // Wait for and click the first product card\n    await page.waitForSelector('.product-card:first-child', { timeout: 5000 });\n    const productCard = await page.$('.product-card:first-child');\n    await productCard.scrollIntoViewIfNeeded();\n    await productCard.click();\n\n    // Wait for product detail modal to appear\n    await page.waitForSelector('.product-detail-modal', { timeout: 5000 });\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_2_modal_open.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_2_modal_open.png'));\n\n    // Wait for and click the wishlist button\n    await page.waitForSelector('.add-to-wishlist', { timeout: 5000 });\n    const wishlistButton = await page.$('.add-to-wishlist');\n    await wishlistButton.scrollIntoViewIfNeeded();\n    await wishlistButton.click();\n\n    // Wait for confirmation and take final screenshot\n    await page.waitForTimeout(1000); // Wait for any animations\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_3_wishlist_added.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_3_wishlist_added.png'));\n\n    // Extract product information for verification\n    const productInfo = await page.$eval('.product-detail-modal', (modal) => {\n      const title = modal.querySelector('.product-title')?.textContent?.trim() || 'Unknown';\n      const price = modal.querySelector('.product-price')?.textContent?.trim() || 'Unknown';\n      return { title, price };\n    });\n\n    return {\n      success: true,\n      action: \"Successfully opened product modal and added item to wishlist\",\n      extractedData: {\n        productTitle: productInfo.title,\n        productPrice: productInfo.price,\n        wishlistStatus: \"Added\"\n      },\n      screenshots,\n      error: null\n    };\n  } catch (error) {\n    // Take error screenshot if possible\n    try {\n      await page.screenshot({ path: path.join(screenshotsDir, 'error.png') });\n      screenshots.push(path.join(screenshotsDir, 'error.png'));\n    } catch (e) {\n      console.log('Could not take error screenshot:', e.message);\n    }\n\n    return {\n      success: false,\n      action: \"Failed to add product to wishlist\",\n      extractedData: {},\n      screenshots,\n      error: error.message\n    };\n  }\n}",
      "executionResult": null,
      "success": false,
      "error": "isServerMode is not defined",
      "executionTime": 163885,
      "timestamp": "2025-09-15T12:23:37.594Z"
    },
    {
      "attemptNumber": 3,
      "model": "deepseek-ai/DeepSeek-V3.1-thinking-on",
      "macroCode": "import path from 'path';\n\nexport default async function(page, fileUrl, screenshotsDir) {\n  try {\n    // Navigate to the HTML file\n    await page.goto(fileUrl);\n    await page.waitForLoadState('networkidle');\n\n    // Take initial screenshot\n    const screenshots = [];\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_1_initial.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_1_initial.png'));\n\n    // Wait for and click on the first product card\n    await page.waitForSelector('.product-card:first-child', { timeout: 5000 });\n    await page.click('.product-card:first-child');\n    \n    // Wait for product detail modal to appear\n    await page.waitForSelector('.modal-content', { timeout: 5000 });\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_2_modal_opened.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_2_modal_opened.png'));\n\n    // Wait for and click the Add to Wishlist button\n    await page.waitForSelector('.add-to-wishlist', { timeout: 5000 });\n    await page.click('.add-to-wishlist');\n    \n    // Wait for success confirmation\n    await page.waitForTimeout(1000);\n    await page.screenshot({ path: path.join(screenshotsDir, 'step_3_wishlist_added.png') });\n    screenshots.push(path.join(screenshotsDir, 'step_3_wishlist_added.png'));\n\n    // Extract product information to verify task completion\n    const productInfo = await page.$eval('.product-card:first-child .product-title', el => el.textContent.trim());\n    \n    return {\n      success: true,\n      action: \"Successfully opened product modal and added item to wishlist\",\n      extractedData: {\n        productName: productInfo,\n        wishlistAction: \"completed\"\n      },\n      screenshots,\n      error: null\n    };\n  } catch (error) {\n    // Capture error screenshot\n    await page.screenshot({ path: path.join(screenshotsDir, 'error.png') });\n    screenshots.push(path.join(screenshotsDir, 'error.png'));\n    \n    return {\n      success: false,\n      action: \"Failed to complete task\",\n      extractedData: {},\n      screenshots,\n      error: error.message\n    };\n  }\n}",
      "executionResult": null,
      "success": false,
      "error": "isServerMode is not defined",
      "executionTime": 135534,
      "timestamp": "2025-09-15T12:26:21.479Z"
    }
  ],
  "success": false,
  "finalResult": null,
  "totalExecutionTime": 394004,
  "timestamp": "2025-09-15T12:22:03.009Z",
  "savedAt": "2025-09-15T12:28:37.013Z",
  "version": "1.0"
}